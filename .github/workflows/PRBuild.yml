name: PR-Build

on: 
  pull_request:
    branches: 
      - 'master'
      - 'release-*'

jobs:
  build:
    env:
      Configuration: Release
    
    runs-on: windows-latest
   
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1

    - name: Setup GitHub NuGet Registry (GPR)
      run: nuget sources Add -Name "GPR" -Source "https://nuget.pkg.github.com/genexuslabs/index.json" -UserName %GITHUB_ACTOR% -Password ${{ secrets.GITHUB_TOKEN }} 

    - name: Restore packages
      run: dotnet restore dotnet\DotNetStandardClasses.sln

    - name: Build
      run: |
        $CommitNumber = git rev-list --no-merges --count HEAD

        dotnet build dotnet\DotNetStandardClasses.sln --no-restore --configuration $Env:Configuration /p:CommitNumber=$CommitNumber
        echo "::set-env name=CommitNumber::$CommitNumber"
        
    - name: Test
      run: dotnet test dotnet\DotNetStandardClasses.sln --no-restore --no-build --configuration $Env:Configuration /p:CommitNumber=$Env:CommitNumber

    - name: Pack
      run: |

        # Get the FileVersion from the Build.props file
        $GetFileVersionOutput = dotnet msbuild dotnet/Directory.Build.props /t:GetFileVersionForPackage /p:CommitNumber=$Env:CommitNumber
        "$GetFileVersionOutput" -match "(?<=FileVersion:)(.*)"
        $GetFileVersionOutput = $Matches[0]

        $IsMaster = dotnet msbuild dotnet/Directory.Build.props /t:IsMaster
        $VersionTag = if ($IsMaster -match "(?<=IsMaster:)(.*)") {"stable"} else {"trunk"}

        $Timestamp = (Get-Date).ToString("yyyyMMddHHmmss")
        $NuGetPackageVersion = $GetFileVersionOutput + "-" + $VersionTag + "." + $Timestamp

        dotnet pack dotnet\DotNetStandardClasses.sln --no-restore --no-build --configuration $Env:Configuration /p:Version=$NuGetPackageVersion
