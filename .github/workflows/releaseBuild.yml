name: Release

on: 
  push:
    branches:
      - 'release-*'

jobs:
  build:
    env:
      Configuration: Release

    runs-on: [self-hosted, windows]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout action - dispatch-build-result
      uses: actions/checkout@v2
      if: github.repository_owner == 'GeneXusLabs'
      with:
          repository: genexuslabs/dispatch-build-result
          ref: releases/v1
          token: ${{ secrets.SECURE_TOKEN }}
          path: .github/actions/dispatch-build-result

    - name: Clean previous build #Because self-hosted runners are not cleaned automatically
      run: |
        Get-ChildItem .\dotnet\src\*\bin -Recurse -ErrorAction SilentlyContinue |
          ForEach-Object {
           rm -Recurse $_.FullName
          }
        Get-ChildItem .\dotnet\src\*\obj -Recurse -ErrorAction SilentlyContinue |
          ForEach-Object {
           rm -Recurse $_.FullName
          }
     
    - name: Restore packages
      run: dotnet restore dotnet\DotNetStandardClasses.sln

    - name: Build
      run: |
        $CommitNumber = git rev-list --no-merges --count HEAD

        dotnet build dotnet\DotNetStandardClasses.sln --no-restore --configuration $Env:Configuration /p:CommitNumber=$CommitNumber
        echo "CommitNumber=$CommitNumber" >> $env:GITHUB_ENV
        
    - name: Test
      run: dotnet test dotnet\DotNetStandardClasses.sln --no-restore --no-build --configuration $Env:Configuration /p:CommitNumber=$Env:CommitNumber

    - name: Pack
      run: |

        # Get the FileVersion from the Build.props file
        $GetFileVersionOutput = dotnet msbuild dotnet/Directory.Build.props /t:GetFileVersionForPackage /p:CommitNumber=$Env:CommitNumber
        "$GetFileVersionOutput" -match "(?<=FileVersion:)(.*)"
        $GetFileVersionOutput = $Matches[0]

        $NuGetPackageVersion = $GetFileVersionOutput
        echo "NuGetPackageVersion=$NuGetPackageVersion" >> $env:GITHUB_ENV

        dotnet pack dotnet\DotNetStandardClasses.sln --no-restore --no-build --configuration $Env:Configuration /p:Version=$NuGetPackageVersion

    - name: Publish packages
      env:
        NuGetRepository: ${{ secrets.NEXUS_NUGET_RELEASES }}
      run: |      
        Get-ChildItem .\dotnet\*.nupkg -Recurse |
          ForEach-Object {
            dotnet nuget push $_.FullName --source $Env:NuGetRepository
            dotnet nuget push $_.FullName --source GPR
          }

    - name: Dispatch build result
      uses: ./.github/actions/dispatch-build-result
      if: github.repository_owner == 'GeneXusLabs'
      with:
        new-version: ${{ env.NuGetPackageVersion }}
        committer: ${{ github.actor }}
        token: ${{ secrets.SECURE_TOKEN }}